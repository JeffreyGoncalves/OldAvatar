<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
	mc:Ignorable="d"
	x:Class="LecturerTrainer.View.TrackingSideTool"
	x:Name="UserControl"
	d:DesignWidth="300" Height="900">
    <UserControl.Resources>
        <Storyboard x:Key="checkFaceTracking">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EmotionRecognitionCheckBox">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LookRightCheckBox">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FeedbackFaceCheckBox">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="EmotionRecognitionCheckBox">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LookRightCheckBox">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="FeedbackFaceCheckBox">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="uncheckFaceTracking">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EmotionRecognitionCheckBox">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LookRightCheckBox">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FeedbackFaceCheckBox">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="EmotionRecognitionCheckBox">
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LookRightCheckBox">
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="FeedbackFaceCheckBox">
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="BadVoiceUnchecked">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LengthOfSampleLabel">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LengthOfSampleSlider">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LengthOfSampleLabel">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LengthOfSampleSlider">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="BadVoiceChecked">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LengthOfSampleLabel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LengthOfSampleSlider">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LengthOfSampleLabel">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LengthOfSampleSlider">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="VoiceMonotonyChecked">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LengthOfSampleLabel2">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LengthofSampleSlider2">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ThresholdLabel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ThresholdSlider">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LengthOfSampleLabel2">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LengthofSampleSlider2">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="ThresholdLabel">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="ThresholdSlider">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="VoiceMonotonyUnchecked">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LengthOfSampleLabel2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LengthofSampleSlider2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ThresholdLabel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ThresholdSlider">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LengthOfSampleLabel2">
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="LengthofSampleSlider2">
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="ThresholdLabel">
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="ThresholdSlider">
                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource checkFaceTracking}"/>
            <BeginStoryboard Storyboard="{StaticResource uncheckFaceTracking}"/>
            <BeginStoryboard Storyboard="{StaticResource BadVoiceChecked}"/>
            <BeginStoryboard Storyboard="{StaticResource BadVoiceUnchecked}"/>
            <BeginStoryboard Storyboard="{StaticResource VoiceMonotonyChecked}"/>
            <BeginStoryboard Storyboard="{StaticResource VoiceMonotonyUnchecked}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid x:Name="TrackingScrollGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="30"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <Border x:Name="BodyTrackingButtons" Padding="{DynamicResource Padding1}" BorderThickness="{DynamicResource Thickness1}" CornerRadius="{DynamicResource CornerRadius1}" Margin="0" Grid.Row="1" Grid.Column="1">
            <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource GeneralBorderColor}"/>
            </Border.BorderBrush>
            <StackPanel x:Name="FeedbackTrackingPanel" Margin="-10,-6,-10,0">
                <Label x:Name="FeedbackTrackinglabel" Content="Feedback Tracking" VerticalAlignment="Top" Height="{DynamicResource TitleLabelHeight}" FontFamily="{DynamicResource GeneralFontFamily}" FontSize="{DynamicResource GeneralTitleFontSize}" Margin="10,0">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </Label.Foreground>
                </Label>
                <Separator Height="{DynamicResource ButtonsSeparatorHeight}" Margin="10,0" VerticalAlignment="Bottom">
                    <Separator.Background>
                        <SolidColorBrush Color="{DynamicResource GeneralBorderColor}"/>
                    </Separator.Background>
                </Separator>
                
                <CheckBox x:Name="FeedbackCheckBox" Content="Hide all feedbacks" Checked="CheckBoxF_Checked" Unchecked="CheckBoxF_Unchecked" Command="{Binding DisplayFeedback}" Margin="15,10,10,0" VerticalAlignment="Top" FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" FontSize="{DynamicResource GeneralFontSize}" >
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <CheckBox x:Name="FeedbackBodyCheckBox" Content="Hide body feedbacks" Checked="CheckBoxFB_Checked" Unchecked="CheckBoxFB_Unchecked" Command="{Binding DisplayFeedback}" Margin="25,0,10,0" VerticalAlignment="Top" FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" FontSize="{DynamicResource GeneralFontSize}" >
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <CheckBox x:Name="FeedbackFaceCheckBox" Content="Hide face feedbacks" Checked="CheckBoxFF_Checked" Unchecked="CheckBoxFF_Unchecked" Command="{Binding DisplayFeedback}" Margin="25,0,10,0" VerticalAlignment="Top" FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" FontSize="{DynamicResource GeneralFontSize}" >
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <Button x:Name="FeedbackCustomButton" Content="Customize feedbacks" Command="{Binding FeedbackCommand}" HorizontalAlignment="Center" Margin="0 5 0 5" Width="{DynamicResource ButtonsWidth}" Height="{DynamicResource GeneralFieldHeight}" Foreground="#FF15202C" Grid.Row="12" Grid.Column="1">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFF3F3F3" Offset="0"/>
                            <GradientStop Color="#FFEBEBEB" Offset="0.5"/>
                            <GradientStop Color="#FFDDDDDD" Offset="0.382"/>
                            <GradientStop Color="#FF424242" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
            </StackPanel>
        </Border>
        <Border x:Name="FaceTrackingButtons" Padding="{DynamicResource Padding1}" BorderThickness="{DynamicResource Thickness1}" CornerRadius="{DynamicResource CornerRadius1}" VerticalAlignment="Top" Margin="0" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" Grid.RowSpan="1">
            <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource GeneralBorderColor}"/>
            </Border.BorderBrush>
            <StackPanel x:Name="FaceTrackingLayout" Margin="-10,-6,-10,0">
                <Label x:Name="FaceTrackingLabel" Content="Face Tracking" VerticalAlignment="Top"  Height="{DynamicResource TitleLabelHeight}" FontFamily="{DynamicResource GeneralFontFamily}" FontSize="{DynamicResource GeneralTitleFontSize}" Margin="10,0" Background="Transparent">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </Label.Foreground>
                </Label>
                <Separator Height="{DynamicResource ButtonsSeparatorHeight}" Margin="10,0" VerticalAlignment="Top">
                    <Separator.Background>
                        <SolidColorBrush Color="{DynamicResource GeneralBorderColor}"/>
                    </Separator.Background>
                </Separator>
                <CheckBox x:Name="ActivateFaceTrackingCheckBox" Content="Activate face tracking" IsChecked="{Binding FaceTracking}" Margin="15,10,10,0" VerticalAlignment="Top" FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" FontSize="{DynamicResource GeneralFontSize}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <ei:ControlStoryboardAction x:Name="CheckFaceTracking" Storyboard="{StaticResource checkFaceTracking}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <ei:ControlStoryboardAction x:Name="UncheckFaceTracking" Storyboard="{StaticResource uncheckFaceTracking}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <Separator Height="{DynamicResource ButtonsSeparatorHeight}" Margin="15,0,15,0" VerticalAlignment="Top">
                    <Separator.Background>
                        <SolidColorBrush Color="{DynamicResource GeneralBorderColor}"/>
                    </Separator.Background>
                </Separator>
                <CheckBox x:Name="EmotionRecognitionCheckBox" Content="Emotion recognition" IsChecked="{Binding emo}" Margin="20,10,20,0" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" Width="{DynamicResource ButtonsWidth}" FontSize="{DynamicResource GeneralFontSize}" >
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <CheckBox x:Name="LookRightCheckBox" Content="View Direction" IsChecked="{Binding LookR}" Margin="20,0,20,0" VerticalAlignment="Top" FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" Width="{DynamicResource ButtonsWidth}" FontSize="{DynamicResource GeneralFontSize}" >
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
            </StackPanel>
        </Border>
        <Border x:Name="SpeechRecognitionButtons" Padding="{DynamicResource Padding1}" BorderThickness="{DynamicResource Thickness1}" CornerRadius="{DynamicResource CornerRadius1}" Margin="0" Grid.Row="5" Grid.Column="1">
            <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource GeneralBorderColor}"/>
            </Border.BorderBrush>
            <StackPanel x:Name="SpeechRecognitionLayout" Margin="-10,-6,-10,0">
                <Label x:Name="SpeechRecognitionLabel" Content="Speech Recognition" VerticalAlignment="Top"   Height="{DynamicResource TitleLabelHeight}" FontFamily="{DynamicResource GeneralFontFamily}" FontSize="{DynamicResource GeneralTitleFontSize}" Margin="10,0">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </Label.Foreground>
                </Label>
                <Separator Height="{DynamicResource ButtonsSeparatorHeight}" Margin="10,0" VerticalAlignment="Top">
                    <Separator.Background>
                        <SolidColorBrush Color="{DynamicResource GeneralBorderColor}"/>
                    </Separator.Background>
                </Separator>
                <CheckBox x:Name="BadVoiceReflecRecognitionLabel" Content="Uhm and Ahh recognition" IsChecked="{Binding BadVoiceReflex}" Margin="15,10,10,0" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" FontSize="{DynamicResource GeneralFontSize}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Unchecked">
                            <ei:ControlStoryboardAction x:Name="BadVoiceUncheck" Storyboard="{StaticResource BadVoiceUnchecked}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Checked">
                            <ei:ControlStoryboardAction x:Name="BadVoiceCheck" Storyboard="{StaticResource BadVoiceChecked}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <Label x:Name="LengthOfSampleLabel" Content="Length of samples" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" FontSize="{DynamicResource GeneralFontSize}" Width="{DynamicResource ButtonsWidth}" Height="27">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </Label.Foreground>
                </Label>
                <Slider x:Name="LengthOfSampleSlider" VerticalAlignment="Top" Margin="15,0,10,0" Height="{DynamicResource GeneralFieldHeight}" Minimum="0" Maximum="50" Value="{Binding HesitationSampleLength, Mode=TwoWay}" />
                <Separator Height="{DynamicResource ButtonsSeparatorHeight}" Margin="15,10,15,10" VerticalAlignment="Top">
                    <Separator.Background>
                        <SolidColorBrush Color="{DynamicResource GeneralBorderColor}"/>
                    </Separator.Background>
                </Separator>
                <CheckBox x:Name="VoiceMonotonyRecognitionCheckBox" Content="Voice monotony recognition" IsChecked="{Binding VoiceMonotony}" Margin="15,0" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" FontSize="{DynamicResource GeneralFontSize}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Unchecked">
                            <ei:ControlStoryboardAction x:Name="VoiceMonotonyUncheck" Storyboard="{StaticResource VoiceMonotonyUnchecked}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Checked">
                            <ei:ControlStoryboardAction x:Name="VoiceMonotonyCheck" Storyboard="{StaticResource VoiceMonotonyChecked}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <Label x:Name="LengthOfSampleLabel2" Content="Length of samples" Margin="10,0" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" FontSize="{DynamicResource GeneralFontSize}" Height="27">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </Label.Foreground>
                </Label>
                <Slider x:Name="LengthofSampleSlider2" VerticalAlignment="Top" Margin="15,0,10,0" Height="{DynamicResource GeneralFieldHeight}" Minimum="0" Maximum="1000" Value="{Binding MonotonySampleLength, Mode=TwoWay}" />
                <Label x:Name="ThresholdLabel" Content="Threshold" Margin="10,0" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" FontSize="{DynamicResource GeneralFontSize}" Height="27">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </Label.Foreground>
                </Label>
                <Slider x:Name="ThresholdSlider" VerticalAlignment="Top" Margin="15,0,10,0" Height="{DynamicResource GeneralFieldHeight}" Minimum="0" Maximum="100" Value="{Binding MonotonySampleThreshold, Mode=TwoWay}" />
                <Separator Height="{DynamicResource ButtonsSeparatorHeight}" Margin="15,0" VerticalAlignment="Top">
                    <Separator.Background>
                        <SolidColorBrush Color="{DynamicResource GeneralBorderColor}"/>
                    </Separator.Background>
                </Separator>
                <CheckBox x:Name="SpeedRateDetectionCheckBox" IsChecked="{Binding SpeedRate}" Content="Speed rate detection" Margin="15,10,15,0" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" FontSize="{DynamicResource GeneralFontSize}" >
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <CheckBox x:Name="PeakDetectionCheckBox" IsChecked="{Binding PeakDetection}" Content="Rising and Falling tone detection" HorizontalAlignment="Left" Margin="15,0,15,0" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" Width="{DynamicResource ButtonsWidth}" FontSize="{DynamicResource GeneralFontSize}" >
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <Label x:Name="LanguageSelection" Content="Language selection :" Margin="10,5,10,0" VerticalAlignment="Top" Height="{DynamicResource GeneralFieldHeight}" FontFamily="{DynamicResource GeneralFontFamily}" FontSize="{DynamicResource GeneralFontSize}">
                    <Label.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </Label.Foreground>
                </Label>
                <ComboBox x:Name="LanguageSelectionComboBox" ItemsSource="{Binding LanguageList}" SelectedIndex="{Binding SelectedLanguage, Mode=TwoWay}" Margin="15,0,15,0" VerticalAlignment="Top" FontFamily="{DynamicResource GeneralFontFamily}" FontSize="{DynamicResource GeneralFontSize}" Height="{DynamicResource GeneralFieldHeight}" FontWeight="Bold"/>
                <CheckBox x:Name="ShowTextCheckBox" IsChecked="{Binding ShowTextOnScreen}" Content="Show text Recognized" HorizontalAlignment="Left" Margin="15,5,15,10" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" Width="{DynamicResource ButtonsWidth}" FontSize="{DynamicResource GeneralFontSize}" >
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <CheckBox x:Name="TeleprompterUsed" IsChecked="{Binding TeleprompterUsed}" Content="Activate teleprompter" HorizontalAlignment="Left" Margin="15,5,15,10" VerticalAlignment="Top"   FontFamily="{DynamicResource GeneralFontFamily}" Height="{DynamicResource GeneralFieldHeight}" Width="{DynamicResource ButtonsWidth}" FontSize="{DynamicResource GeneralFontSize}" >
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource GeneralTextColor}"/>
                    </CheckBox.Foreground>
                </CheckBox>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>